{"version":3,"file":"src_components_Auth_AddPasskey_tsx.bundle.js","mappings":";;;;;;;;;;;;;;AAAgD;AAClB;AAG9B,MAAME,UAAU,GAAG,SAAAA,CAACC,KAAU,EAAmB;EAC7C,OAAO,IAAIC,OAAO,CAAM,UAACC,OAAO,EAAEC,MAAM,EAAK;IACzCL,6CAAI,CACCM,IAAI,CAAE,GAAEP,kDAAM,CAACQ,OAAQ,oBAAmB,EAAE;MAAEL;IAAM,CAAC,CAAC,CACtDM,IAAI,CAAC,UAACC,IAAI;MAAA,OAAKL,OAAO,CAACK,IAAI,CAAC;IAAA,EAAC,CAC7BC,KAAK,CAACL,MAAM,CAAC;EACtB,CAAC,CAAC;AACN,CAAC;AAED,iEAAeJ,UAAU;;;;;;;;;;;;;;;;;;;;;;;ACbgB;AACC;AACgB;AACE;AACnC;AACoB;AACJ;AACF;AACH;AAGrB,SAASmB,UAAUA,CAAA,EAAG;EACjC,MAAM;IAAElB;EAAM,CAAC,GAAGa,2DAAS,CAAC,CAAC;EAC7B,MAAMM,QAAQ,GAAGP,6DAAW,CAAC,CAAC;EAC9B,MAAM;IAACQ;EAAI,CAAC,GAAGH,6CAAO,CAAC,CAAC;EACxB,MAAM;IAAEI;EAAO,CAAC,GAAGP,+CAAM,CACpB,GAAEjB,kDAAM,CAACyB,cAAe,2BAA0B,EACnDP,8CACJ,CAAC;EACD,IAAG,CAACf,KAAK,EAAE;IACPmB,QAAQ,CAAC,GAAG,CAAC;IACb,oBAAOV,2DAAA,CAAAA,sDAAA,MAAI,CAAC;EAChB;EACAC,gDAAS,CAAC,YAAM;IACZX,yEAAU,CAACC,KAAK,CAAC,CAACM,IAAI,CAAC,UAACC,IAAI,EAAK;MAC7BkB,QAAQ,CAACC,MAAM,GAAI,gBAAenB,IAAI,CAACA,IAAI,CAACA,IAAK,qBAAoB,IAAIoB,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACC,WAAW,CAAC,CAAE,EAAC;MAC9HV,QAAQ,CAAC,GAAG,CAAC;MACbE,MAAM,CAAC,CAAC;MACRL,iDAAK,CAACc,OAAO,CAAC,uFAAuF,EAAE;QACnGC,QAAQ,EAAE,cAAc;QACxBC,SAAS,EAAE,IAAI;QACfC,eAAe,EAAE,KAAK;QACtBC,YAAY,EAAE,IAAI;QAClBC,YAAY,EAAE,IAAI;QAClBC,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAEC,SAAS;QACnBC,KAAK,EAAEnB,IAAI,GAAG,MAAM,GAAG;MAC3B,CAAC,CAAC;IACN,CAAC,CAAC,CAACZ,KAAK,CAAC,UAACgC,CAAC,EAAK;MACZC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MAChBxB,iDAAK,CAAC0B,KAAK,CAAC,iDAAiD,EAAE;QAC3DX,QAAQ,EAAE,cAAc;QACxBC,SAAS,EAAE,IAAI;QACfC,eAAe,EAAE,KAAK;QACtBC,YAAY,EAAE,IAAI;QAClBC,YAAY,EAAE,IAAI;QAClBC,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAEC,SAAS;QACnBC,KAAK,EAAEnB,IAAI,GAAG,MAAM,GAAG;MAC3B,CAAC,CAAC;MACFD,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACIV,2DAAA,CAACE,yDAAO,MAAC,CAAC;AAElB","sources":["webpack://newwebsite/./src/api/auth/passkeys/addPasskey.ts","webpack://newwebsite/./src/components/Auth/AddPasskey.tsx"],"sourcesContent":["import { config } from '../../../config/config';\nimport http from '../../http';\n\n\nconst addPasskey = (token: any): Promise<any> => {\n    return new Promise<any>((resolve, reject) => {\n        http\n            .post(`${config.apilink}/auth/passkeys/add`, { token })\n            .then((data) => resolve(data))\n            .catch(reject);\n    });\n};\n\nexport default addPasskey;\n","import React, { useEffect } from 'react';\nimport Loading from '../Elements/Loading';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport addPasskey from '../../api/auth/passkeys/addPasskey';\nimport useSWR from 'swr';\nimport { config } from '../../config/config';\nimport { fetcher } from '../../api/http';\nimport { toast } from 'react-toastify';\nimport { useDark } from '../../App';\n\n\nexport default function AddPasskey() {\n    const { token } = useParams();\n    const navigate = useNavigate();\n    const {dark} = useDark();\n    const { mutate } = useSWR(\n        `${config.privateapilink}/auth/isLogged?infos=true`,\n        fetcher\n    );\n    if(!token) {\n        navigate('/');\n        return <></>;\n    }\n    useEffect(() => {\n        addPasskey(token).then((data) => {\n            document.cookie = `access_token=${data.data.data}; path=/; expires=${new Date(Date.now() + 6 * 60 * 60 * 1000).toUTCString()}`;\n            navigate('/');\n            mutate();\n            toast.success('You are now logged in, and your passkey has been successfully linked to your account!', {\n                position: 'bottom-right',\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: dark ? 'dark' : 'light',\n            });\n        }).catch((e) => {\n            console.error(e);\n            toast.error('An unexpected error occurred. Code: BagAuth-057', {\n                position: 'bottom-right',\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: dark ? 'dark' : 'light',\n            });\n            navigate('/');\n        });\n    }, []);\n    return (\n        <Loading/>\n    );\n}"],"names":["config","http","addPasskey","token","Promise","resolve","reject","post","apilink","then","data","catch","React","useEffect","Loading","useNavigate","useParams","useSWR","fetcher","toast","useDark","AddPasskey","navigate","dark","mutate","privateapilink","createElement","Fragment","document","cookie","Date","now","toUTCString","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","e","console","error"],"sourceRoot":""}
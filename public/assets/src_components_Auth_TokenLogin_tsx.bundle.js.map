{"version":3,"file":"src_components_Auth_TokenLogin_tsx.bundle.js","mappings":";;;;;;;;;;;;;;AAA6C;AAClB;AAG3B,MAAME,UAAU,GAAG,SAAAA,CAACC,KAAa,EAAoB;EACnD,OAAO,IAAIC,OAAO,CAAM,UAACC,OAAO,EAAEC,MAAM,EAAK;IAC3CL,6CAAI,CACDM,IAAI,CAAE,GAAEP,kDAAM,CAACQ,cAAe,kBAAiB,EAAE;MAAEL;IAAM,CAAC,CAAC,CAC3DM,IAAI,CAAC,UAACC,IAAI;MAAA,OAAKL,OAAO,CAACK,IAAI,CAAC;IAAA,EAAC,CAC7BC,KAAK,CAACL,MAAM,CAAC;EAClB,CAAC,CAAC;AACJ,CAAC;AAED,iEAAeJ,UAAU;;;;;;;;;;;;;;;;;;;;;;;ACbgB;AACiB;AACjC;AACgB;AACU;AACZ;AACG;AACG;AACT;AAErB,SAASmB,UAAUA,CAAA,EAAG;EACjC,MAAM;IAAElB;EAAM,CAAC,GAAGY,2DAAS,CAAC,CAAC;EAC7B,MAAMO,QAAQ,GAAGR,6DAAW,CAAC,CAAC;EAC9B,MAAM;IAACS;EAAI,CAAC,GAAGH,6CAAO,CAAC,CAAC;EACxB,MAAM;IAAEI;EAAO,CAAC,GAAGR,+CAAM,CACpB,GAAEhB,kDAAM,CAACQ,cAAe,2BAA0B,EACnDS,8CACJ,CAAC;EACD,IAAG,CAACd,KAAK,EAAE;IACPmB,QAAQ,CAAC,GAAG,CAAC;IACb,oBAAOV,2DAAA,CAAAA,sDAAA,MAAI,CAAC;EAChB;EACAC,gDAAS,CAAC,YAAM;IACZX,gEAAU,CAACC,KAAK,CAAC,CAACM,IAAI,CAAC,UAACC,IAAI,EAAK;MAC7B,IAAGA,IAAI,CAACA,IAAI,CAAC,QAAQ,CAAC,KAAK,OAAO,EAAE;QAChCQ,iDAAK,CAACS,KAAK,CAAC,sDAAsD,EAAE;UAChEC,QAAQ,EAAE,cAAc;UACxBC,SAAS,EAAE,IAAI;UACfC,eAAe,EAAE,KAAK;UACtBC,YAAY,EAAE,IAAI;UAClBC,YAAY,EAAE,IAAI;UAClBC,SAAS,EAAE,IAAI;UACfC,QAAQ,EAAEC,SAAS;UACnBC,KAAK,EAAEb,IAAI,GAAG,MAAM,GAAG;QAC3B,CAAC,CAAC;QACF,OAAOD,QAAQ,CAAC,GAAG,CAAC;MACxB,CAAC,MAAM;QACHe,QAAQ,CAACC,MAAM,GAAI,gBAAe5B,IAAI,CAACA,IAAI,CAAC,MAAM,CAAC,CAAC,cAAc,CAAE,qBAAoB,IAAI6B,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACC,WAAW,CAAC,CAAE,EAAC;QACjJvB,iDAAK,CAACwB,OAAO,CAAC,+BAA+B,EAAE;UAC3Cd,QAAQ,EAAE,cAAc;UACxBC,SAAS,EAAE,IAAI;UACfC,eAAe,EAAE,KAAK;UACtBC,YAAY,EAAE,IAAI;UAClBC,YAAY,EAAE,IAAI;UAClBC,SAAS,EAAE,IAAI;UACfC,QAAQ,EAAEC,SAAS;UACnBC,KAAK,EAAEb,IAAI,GAAG,MAAM,GAAG;QAC3B,CAAC,CAAC;QACFC,MAAM,CAAC,CAAC;QACRF,QAAQ,CAAC,GAAG,CAAC;QACb,oBAAOV,2DAAA,CAAAA,sDAAA,MAAI,CAAC;MAChB;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACIA,2DAAA,CAACO,yDAAO,MAAC,CAAC;AAElB;AAAC","sources":["webpack://newwebsite/./src/api/auth/tokenLogin.ts","webpack://newwebsite/./src/components/Auth/TokenLogin.tsx"],"sourcesContent":["import { config } from '../../config/config';\nimport http from '../http';\n\n\nconst tokenLogin = (token: string ): Promise<any> => {\n  return new Promise<any>((resolve, reject) => {\n    http\n      .post(`${config.privateapilink}/auth/tokenlogin`, { token })\n      .then((data) => resolve(data))\n      .catch(reject);\n  });\n};\n\nexport default tokenLogin;","import React, { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport useSWR from 'swr';\nimport { fetcher } from '../../api/http';\nimport tokenLogin from '../../api/auth/tokenLogin';\nimport { toast } from 'react-toastify';\nimport Loading from '../Elements/Loading';\nimport { config } from '../../config/config';\nimport { useDark } from '../../App';\n\nexport default function TokenLogin() {\n    const { token } = useParams();\n    const navigate = useNavigate();\n    const {dark} = useDark();\n    const { mutate } = useSWR(\n        `${config.privateapilink}/auth/isLogged?infos=true`,\n        fetcher\n    );\n    if(!token) {\n        navigate('/');\n        return <></>;\n    }\n    useEffect(() => {\n        tokenLogin(token).then((data) => {\n            if(data.data['status'] === 'error') {\n                toast.error('Error. Can\\'t get your account data with this token.', {\n                    position: 'bottom-right',\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: dark ? 'dark' : 'light',\n                });\n                return navigate('/');\n            } else {\n                document.cookie = `access_token=${data.data['data']['access_token']}; path=/; expires=${new Date(Date.now() + 6 * 60 * 60 * 1000).toUTCString()}`;\n                toast.success('Success! Your are now logged.', {\n                    position: 'bottom-right',\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: dark ? 'dark' : 'light',\n                });\n                mutate();\n                navigate('/')\n                return <></>;\n            }\n        });\n    }, []);\n    return (\n        <Loading/>\n    );\n};\n\n"],"names":["config","http","tokenLogin","token","Promise","resolve","reject","post","privateapilink","then","data","catch","React","useEffect","useNavigate","useParams","useSWR","fetcher","toast","Loading","useDark","TokenLogin","navigate","dark","mutate","createElement","Fragment","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","document","cookie","Date","now","toUTCString","success"],"sourceRoot":""}
{"version":3,"file":"938.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA6C;AAClB;AAG3B,MAAME,YAAY,GAAG,SAAAA,CAACC,KAAa,EAAEC,IAAY,EAAmB;EAClE,OAAO,IAAIC,OAAO,CAAM,UAACC,OAAO,EAAEC,MAAM,EAAK;IAC3CN,oBAAI,CACDO,IAAI,CAAE,GAAER,oBAAM,CAACS,cAAe,gBAAe,EAAE;MAAEN,KAAK;MAAEC;IAAK,CAAC,CAAC,CAC/DM,IAAI,CAAC,UAACC,IAAI;MAAA,OAAKL,OAAO,CAACK,IAAI,CAAC;IAAA,EAAC,CAC7BC,KAAK,CAACL,MAAM,CAAC;EAClB,CAAC,CAAC;AACJ,CAAC;AAED,+CAAeL,YAAY;;;;;;ACba;AACuB;AACtC;AACU;AACE;AACU;AAEI;AACT;AACG;AAE7C,MAAMsB,OAAO,GAAG,SAAAA,CAACC,GAAsB;EAAA,OAAKC,KAAK,CAACD,GAAG,CAAC,CAACf,IAAI,CAAC,UAACiB,GAAG;IAAA,OAAKA,GAAG,CAACC,IAAI,CAAC,CAAC;EAAA,EAAC;AAAA;AAEhF,MAAMC,aAAI,GAAGT,4BAAM,CAAC;EAClBjB,KAAK,EAAEkB,4BAAM,CAAC,CAAC,CAAClB,KAAK,CAAC,4BAA4B,CAAC,CAAC2B,QAAQ,CAAC,4BAA4B,CAAC;EAC1FC,QAAQ,EAAEV,4BAAM,CAAC,CAAC,CAACS,QAAQ,CAAC,+BAA+B;AAC7D,CAAC,CAAC;AAEa,SAASE,QAAQA,CAAA,EAAG;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,kBAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,SAAS,EAAEC,QAAQ,CAAC,GAAGtB,kBAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuB,WAAW,EAAEC,UAAU,CAAC,GAAGxB,kBAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMyB,QAAQ,GAAGtB,4BAAW,CAAC,CAAC;EAG9B,MAAM;IAAEN,IAAI;IAAE6B,MAAM;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGxB,6BAAM,CAC9C,GAAElB,oBAAM,CAACS,cAAe,gBAAe,EACxCe,OACF,CAAC;EACD,MAAMmB,MAAM,GAAGxB,gCAAS,CAAC;IACvByB,aAAa,EAAE;MAAEzC,KAAK,EAAE,EAAE;MAAE4B,QAAQ,EAAE;IAAG,CAAC;IAC1Cc,gBAAgB,EAAEhB,aAAI;IACtBiB,QAAQ,EAAE,SAAAA,CAACC,MAAM,EAAK;MACpBb,UAAU,CAAC,IAAI,CAAC;MAChBZ,QAAQ,CAACyB,MAAM,CAAC5C,KAAK,EAAC4C,MAAM,CAAChB,QAAQ,CAAC,CAACrB,IAAI,CAAC,UAACC,IAAI,EAAK;QACpDqC,OAAO,CAACC,GAAG,CAACtC,IAAI,CAACA,IAAI,CAAC;QACtB,IAAGA,IAAI,CAACA,IAAI,CAAC,QAAQ,CAAC,KAAK,OAAO,EAAE;UAClCyB,QAAQ,CAACzB,IAAI,CAACA,IAAI,CAAC,SAAS,CAAC,CAAC;UAC9B2B,UAAU,CAAC,EAAE,CAAC;UACdJ,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,MAAM;UACLE,QAAQ,CAAC,EAAE,CAAC;UAEZE,UAAU,CAAC,uGAAuG,CAAC;QACrH;MACF,CAAC,CAAC,CAAC1B,KAAK,CAAC,YAAM;QACbwB,QAAQ,CAAC,sEAAsE,CAAC;QAChFF,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;IAEJ;EACF,CAAC,CAAC;EACF,IAAI,CAACvB,IAAI,IAAK8B,KAAK,IAAIC,SAAU,EAAE;IACjC,oBAAO7B,mBAAA,CAACU,kBAAO,MAAC,CAAC;EACnB;EACA,IAAIZ,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE;IAC3B,oBAAOE,mBAAA,CAACG,qBAAQ;MAACmC,EAAE,EAAC;IAAG,CAAE,CAAC;EAC5B;EACAC,QAAQ,CAACC,KAAK,GAAG,qBAAqB;EAEtC,oBACExC,mBAAA,CAAAA,cAAA,qBACEA,mBAAA;IAAI0C,SAAS,EAAC;EAA2B,GAAC,UAAY,CAAC,eACvD1C,mBAAA;IAAI0C,SAAS,EAAC;EAAwC,GAAEpB,SAAc,CAAC,eACvEtB,mBAAA;IAAI0C,SAAS,EAAC;EAA0C,GAAElB,WAAgB,CAAC,eAE3ExB,mBAAA;IAAS0C,SAAS,EAAC;EAA0B,gBAC3C1C,mBAAA;IAAMiC,QAAQ,EAAEH,MAAM,CAACa;EAAa,gBAClC3C,mBAAA;IAAO0C,SAAS,EAAC;EAAiC,gBAChD1C,mBAAA;IAAM0C,SAAS,EAAC;EAAY,GAAC,UAAQ,eAAA1C,mBAAA,WAAI,CAAC,eAAAA,mBAAA;IAAM0C,SAAS,EAAC;EAAc,GAAEZ,MAAM,CAACc,MAAM,CAAC1B,QAAe,CAAO,CACzG,CAAC,eACNlB,mBAAA;IAAO6C,EAAE,EAAC,UAAU;IAClBtD,IAAI,EAAC,UAAU;IACfuD,IAAI,EAAC,UAAU;IACfC,WAAW,EAAC,SAAS;IACrBC,QAAQ,EAAElB,MAAM,CAACmB,YAAa;IAC9BhC,QAAQ;IACRyB,SAAS,EAAC;EAAiD,CAAE,CAAC,eAElE1C,mBAAA;IAAO0C,SAAS,EAAC;EAAiC,gBAChD1C,mBAAA;IAAM0C,SAAS,EAAC;EAAY,GAAC,YAAU,eAAA1C,mBAAA,WAAI,CAAC,eAAAA,mBAAA;IAAM0C,SAAS,EAAC;EAAc,GAAEZ,MAAM,CAACc,MAAM,CAACtD,KAAY,CAAO,CACxG,CAAC,eACNU,mBAAA;IAAO6C,EAAE,EAAC,OAAO;IACftD,IAAI,EAAC,OAAO;IACZuD,IAAI,EAAC,OAAO;IACZC,WAAW,EAAC,qBAAqB;IACjCC,QAAQ,EAAElB,MAAM,CAACmB,YAAa;IAC9BhC,QAAQ;IACRyB,SAAS,EAAC;EAAkD,CAAE,CAAC,eAInE1C,mBAAA,WAAK,CAAC,eACNA,mBAAA;IAAQ0C,SAAS,EAAC,uDAAuD;IAACI,IAAI,EAAC,QAAQ;IAACI,QAAQ,EAAE9B,OAAO,IAAIU,MAAM,CAACc,MAAM,CAACtD,KAAK,GAAG,IAAI,GAAG,MAAK,IAAIwC,MAAM,CAACc,MAAM,CAAC1B,QAAQ,GAAG,IAAI,GAAG;EAAM,GAAC,QAElL,CAAC,eACTlB,mBAAA,WAAI,CAAC,eACLA,mBAAA,eAAM,8BAA4B,eAAAA,mBAAA,CAACE,kCAAI;IAACoC,EAAE,EAAC,QAAQ;IAACI,SAAS,EAAC;EAAe,GAAC,WAAe,CAAO,CAChG,CACC,CAAC,eACV1C,mBAAA;IAAS0C,SAAS,EAAC;EAAc,CAAU,CAC3C,CAAC;AAEP","sources":["webpack://newwebsite/./src/api/auth/register.ts","webpack://newwebsite/./src/components/Auth/Register.tsx"],"sourcesContent":["import { config } from '../../config/config';\nimport http from '../http';\n\n\nconst registerUser = (email: string, name: string): Promise<any> => {\n  return new Promise<any>((resolve, reject) => {\n    http\n      .post(`${config.privateapilink}/auth/register`, { email, name })\n      .then((data) => resolve(data))\n      .catch(reject);\n  });\n};\n\nexport default registerUser;","import React, { useState } from 'react';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport useSWR from \"swr\";\nimport { useFormik } from 'formik';\nimport { object, string } from 'yup';\nimport register from '../../api/auth/register';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport Loading from \"../Elements/Loading\";\nimport { config } from \"../../config/config\";\n\nconst fetcher = (url: RequestInfo | URL) => fetch(url).then((res) => res.json());\n\nconst form = object({\n  email: string().email('This is not a valid email.').required('You need to enter a email.'),\n  username: string().required('You need to enter a username.'),\n});\n\nexport default function Register() {\n  const [loading, setLoading] = useState(false);\n  const [showerror, setError] = useState('');\n  const [showmessage, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  \n  const { data, mutate, error, isLoading } = useSWR(\n    `${config.privateapilink}/auth/isLogged`,\n    fetcher\n  );\n  const formik = useFormik({\n    initialValues: { email: '', username: '' },\n    validationSchema: form,\n    onSubmit: (values) => {\n      setLoading(true)\n      register(values.email,values.username).then((data) => {\n        console.log(data.data);\n        if(data.data['status'] === 'error') {\n          setError(data.data['message']);\n          setMessage('');\n          setLoading(false)\n        } else {\n          setError('');\n\n          setMessage('To complete the authentication process, please check your email and follow the instructions provided.');\n        }\n      }).catch(() => {\n        setError('An unexcepted error happend. Please contact one of our support team.');\n        setLoading(false)\n      })\n\n    }\n  });\n  if (!data || (error || isLoading)) {\n    return <Loading/>;\n  }\n  if (data['status'] === true) {\n    return <Navigate to=\"/\" />\n  }\n  document.title = 'Bagou450 - Register'\n\n  return (\n    <>\n      <h1 className='text-4xl my-4 text-center'>Register</h1>\n      <h2 className='text-2xl my-4 text-center text-red-500'>{showerror}</h2>\n      <h2 className='text-2xl my-4 text-center text-green-500'>{showmessage}</h2>\n\n      <section className='my-4 text-center mx-auto'>\n        <form onSubmit={formik.handleSubmit}>\n          <label className=\"label mx-auto text-center w-fit\">\n            <span className=\"label-text\">Username<br/><span className='text-red-500'>{formik.errors.username}</span></span>\n          </label>\n            <input id=\"username\"\n              name=\"username\"\n              type=\"username\"\n              placeholder=\"Bagouox\"\n              onChange={formik.handleChange}\n              required\n              className=\"input input-bordered input-info w-full max-w-xs\" />\n\n          <label className=\"label mx-auto text-center w-fit\">\n            <span className=\"label-text\">Your Email<br/><span className='text-red-500'>{formik.errors.email}</span></span>\n          </label>\n            <input id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"exemple@exemple.com\"\n              onChange={formik.handleChange}\n              required\n              className=\"input input-bordered input-info w-full  max-w-xs\" />\n\n           \n        \n          <br />\n          <button className=\"btn btn-outline btn-primary mt-4 w-full max-w-[16rem]\" type=\"submit\" disabled={loading || formik.errors.email ? true : false || formik.errors.username ? true : false}>\n            Submit\n          </button>\n          <br/>\n          <span>You already have a account? <Link to='/login' className='text-blue-500'>Login now</Link></span>\n        </form>\n      </section>\n      <section className='min-h-screen'></section>\n    </>\n  );\n}\n"],"names":["config","http","registerUser","email","name","Promise","resolve","reject","post","privateapilink","then","data","catch","React","useState","Link","Navigate","useNavigate","useSWR","useFormik","object","string","register","Loading","fetcher","url","fetch","res","json","form","required","username","Register","loading","setLoading","showerror","setError","showmessage","setMessage","navigate","mutate","error","isLoading","formik","initialValues","validationSchema","onSubmit","values","console","log","createElement","to","document","title","Fragment","className","handleSubmit","errors","id","type","placeholder","onChange","handleChange","disabled"],"sourceRoot":""}
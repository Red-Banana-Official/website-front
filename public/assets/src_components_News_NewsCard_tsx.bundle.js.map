{"version":3,"file":"src_components_News_NewsCard_tsx.bundle.js","mappings":";;;;;;;;;;;;;;AAA6C;AAClB;AAE3B,MAAME,OAAO,GAAG,SAAAA,CAACC,EAAU,EAAmB;EAC5C,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;IACtCL,6CAAI,CACDM,GAAG,CAAE,GAAEP,kDAAM,CAACQ,cAAe,UAASL,EAAG,EAAC,CAAC,CAC3CM,IAAI,CAAC,UAACC,IAAI;MAAA,OAAKL,OAAO,CAACK,IAAI,CAAC;IAAA,EAAC,CAC7BC,KAAK,CAACL,MAAM,CAAC;EAClB,CAAC,CAAC;AACJ,CAAC;AAED,iEAAeJ,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ6B;AACT;AACM;AACH;AACA;AACN;AACE;AACJ;AACT;AACU;AACF;AACD;AAepB,SAASqB,QAAQA,CAAA,EAAG;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,+CAAQ,CAAO,CAAC;EACxC,MAAM;IAAEX;EAAG,CAAC,GAAGc,4DAAS,CAAC,CAAC;EAC1B,MAAM;IAACS;EAAI,CAAC,GAAGL,6CAAO,CAAC,CAAC;EACxBR,gDAAS,CAAC,YAAM;IACZ,IAAGV,EAAE,EAAE;MACHD,6DAAO,CAACC,EAAE,CAAC,CAACM,IAAI,CAAC,UAACC,IAAI,EAAK;QACvB,IAAGA,IAAI,CAACA,IAAI,CAACiB,MAAM,KAAK,SAAS,EAAE;UAC/BF,OAAO,CAACf,IAAI,CAACA,IAAI,CAACA,IAAI,CAAC;UACvB;QACJ;QACAQ,iDAAK,CAACU,KAAK,CAAC,oCAAoC,EAAE;UAC9CC,QAAQ,EAAE,cAAc;UACxBC,SAAS,EAAE,IAAI;UACfC,eAAe,EAAE,KAAK;UACtBC,YAAY,EAAE,IAAI;UAClBC,YAAY,EAAE,IAAI;UAClBC,SAAS,EAAE,IAAI;UACfC,QAAQ,EAAEC,SAAS;UACnBC,KAAK,EAAEX,IAAI,GAAG,MAAM,GAAG;QAC3B,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,IAAG,CAACF,IAAI,EAAE;IACN,oBAAOZ,2DAAA,CAACG,yDAAO,MAAC,CAAC;EACrB;EACAwB,QAAQ,CAACC,KAAK,GAAI,cAAahB,IAAI,CAACgB,KAAM,EAAC;EAE3C,oBACI5B,2DAAA,CAAAA,sDAAA,qBACIA,2DAAA,CAACQ,gDAAM,qBACHR,2DAAA;IAAM8B,IAAI,EAAC,aAAa;IAACC,OAAO,EAAG,SAAQC,IAAI,CAACC,KAAK,CAACrB,IAAI,CAACsB,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAAE;EAAE,CAAE,CAC5E,CAAC,eACTnC,2DAAA;IAAIoC,SAAS,EAAG,GAAEtB,IAAI,GAAG,gBAAgB,GAAG,YAAa;EAA4B,GAAEF,IAAI,CAACgB,KAAK,EAAC,GAAC,eAAA5B,2DAAA;IAAMoC,SAAS,EAAE;EAAsB,GAAC,KAAG,EAACxB,IAAI,CAACyB,MAAa,CAAC,KAAC,eAAArC,2DAAA;IAAMoC,SAAS,EAAE;EAAqB,GAAE7B,6CAAM,CAACK,IAAI,CAAC0B,UAAU,CAAC,CAACC,OAAO,CAAC,CAAQ,CAAK,CAAC,eACzPvC,2DAAA;IAAIoC,SAAS,EAAG,GAAEtB,IAAI,GAAG,gBAAgB,GAAG,YAAa;EAAkD,GAAEF,IAAI,CAAC4B,IAAS,CAAC,eAC5HxC,2DAAA;IAASoC,SAAS,EAAE;EAAe,GAC9BhC,6DAAe,CAACM,oDAAQ,CAACE,IAAI,CAACmB,OAAO,CAAC,CAElC,CAGX,CAAC;AAEX","sources":["webpack://newwebsite/./src/api/news/getNews.ts","webpack://newwebsite/./src/components/News/NewsCard.tsx"],"sourcesContent":["import { config } from '../../config/config';\nimport http from '../http';\n\nconst getNews = (id: string): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    http\n      .get(`${config.privateapilink}/blogs/${id}`)\n      .then((data) => resolve(data))\n      .catch(reject);\n  });\n};\n\nexport default getNews;","import React, { useEffect, useState } from 'react';\nimport Loading from '../Elements/Loading';\nimport ReactHtmlParser from 'react-html-parser';\nimport { useParams } from 'react-router-dom';\nimport getNews from '../../api/news/getNews';\nimport { toast } from 'react-toastify';\nimport 'react-quill/dist/quill.snow.css';\nimport '../Admin/Blogs/toolBar.scss';\nimport moment from 'moment';\nimport { Helmet } from 'react-helmet';\nimport { useDark } from '../../App';\nimport {sanitize} from 'dompurify';\n\ninterface news {\n  id: number;\n  author: string;\n  tags: string;\n  title: string;\n  category_id: number;\n  views: number;\n  slug: string;\n  pictures: string;\n  content: string;\n  created_at: string;\n}\n\nexport default function NewsCard() {\n    const [news, setNews] = useState<news>();\n    const { id } = useParams();\n    const {dark} = useDark();\n    useEffect(() => {\n        if(id) {\n            getNews(id).then((data) => {\n                if(data.data.status === 'success') {\n                    setNews(data.data.data);\n                    return;\n                }\n                toast.error('Sorry a unexpected error occurred.', {\n                    position: 'bottom-right',\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: dark ? 'dark' : 'light',\n                });\n            });\n        }\n    }, []);\n    if(!news) {\n        return <Loading/>;\n    }\n    document.title = `Bagou450 - ${news.title}`;\n\n    return (\n        <>\n            <Helmet>\n                <meta name=\"description\" content={`Tags: ${JSON.parse(news.tags).join(', ')}`} />\n            </Helmet>\n            <h1 className={`${dark ? 'text-slate-300' : 'text-black'} text-center text-4xl mt-4`}>{news.title} <span className={'text-2xl opacity-60'}>by {news.author}</span> <span className={'text-xl opacity-40'}>{moment(news.created_at).fromNow()}</span></h1>\n            <h2 className={`${dark ? 'text-slate-300' : 'text-black'} text-center text-black text-2xl mt-4 opacity-80`}>{news.slug}</h2>\n            <section className={'mx-8 my-8 ql'}>\n                {ReactHtmlParser(sanitize(news.content))}\n\n            </section>\n\n\n        </>\n    );\n}"],"names":["config","http","getNews","id","Promise","resolve","reject","get","privateapilink","then","data","catch","React","useEffect","useState","Loading","ReactHtmlParser","useParams","toast","moment","Helmet","useDark","sanitize","NewsCard","news","setNews","dark","status","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","createElement","document","title","Fragment","name","content","JSON","parse","tags","join","className","author","created_at","fromNow","slug"],"sourceRoot":""}